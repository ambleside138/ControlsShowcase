<controls:MetroWindow x:Class="ControlsShowcase.Views.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                      xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
                      xmlns:controls="http://schemes.grabacr.net/winfx/2014/controls"
                      xmlns:v="clr-namespace:ControlsShowcase.Views"
                      xmlns:vm="clr-namespace:ControlsShowcase.ViewModels"
                      WindowStyle="None"
                      Background="{DynamicResource ThemeBrushKey}"
					  Foreground="{DynamicResource ActiveForegroundBrushKey}"
                      Title="MainWindow"
                      Height="550"
                      Width="525">

 
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    
    <i:Interaction.Triggers>
    
    	<!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
    	<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
    	<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています --> 
        
        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="23" />
        </Grid.RowDefinitions>

        <Border Grid.Row="0"
				controls:MetroWindow.IsCaptionBar="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <controls:CaptionIcon Grid.Column="0">
                    <Ellipse Width="18"
							 Height="18"
							 Fill="{DynamicResource ActiveForegroundBrushKey}" />
                </controls:CaptionIcon>
                <TextBlock Grid.Column="1"
						   Text="ControlsShowcase"
						   TextTrimming="CharacterEllipsis"
						   Foreground="{DynamicResource ForegroundBrushKey}"
						   FontFamily="Segoe UI Light"
						   FontSize="18"
						   Margin="3,0,0,0"
						   VerticalAlignment="Center" />
                <controls:SystemButtons Grid.Column="2"
										VerticalAlignment="Top" />
            </Grid>
        </Border>

        <TabControl Grid.Row="1"
                    Style="{StaticResource VerticalTabControlStyleKey}">
            
            <TabItem Header="Expander">
                <v:ExpanderTabView />
            </TabItem>
            
            <TabItem Header="ListBox">
                <v:ListBoxTabView />
            </TabItem>

            <TabItem Header="AvalonDock">
                <v:AvalonDockTabView />
            </TabItem>

            <TabItem Header="Filter">
                <v:FilterTabView />
            </TabItem>

            <TabItem Header="StringFormat">
                <v:StringFormatTabView />
            </TabItem>

            <TabItem Header="Schedule">
                <v:ScheduleTabView />
            </TabItem>

            <TabItem Header="Popup">
                <v:PopupLayoutTabView />
            </TabItem>

            <TabItem Header="Focus">
                <v:FocusTabView />
            </TabItem>

            <!--<TabItem Header="CapsLock">
                <v:CapsLockTabView />
            </TabItem>-->

            <TabItem Header="GroupItem">
                <v:GroupItemTabView />
            </TabItem>

            <TabItem Header="NavigateAnimation">
                <v:NavigateAnimationTabView />
            </TabItem>

            <TabItem Header="TemplateInputNavigation">
                <v:TemplateInputNavigationTabView />
            </TabItem>

            <!--<TabItem Header="ProgressBar">
                <v:ProgressBarTabView />
            </TabItem>-->
            
            
        </TabControl>

        <!--Footer-->
        <Grid Grid.Row="2"
			  Background="{DynamicResource AccentBrushKey}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <controls:ResizeGrip Grid.Column="1" />
        </Grid>
    </Grid>

</controls:MetroWindow>
